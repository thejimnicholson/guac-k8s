# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  guacamole
  namespace: guacamole
  labels:
    app:  guacamole
spec:
  selector:
    matchLabels:
      app: guacamole
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  guacamole
    spec:
      initContainers:
      - name: guacamole-config
        image: guacamole/guacamole
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        command:
          - bash
          - '-c'
          - '/opt/guacamole/bin/initdb.sh --postgres > /docker-entrypoint-initdb.d/init.sql'
        imagePullPolicy: Always
        volumeMounts:
          - name: guac-initdb
            mountPath: /docker-entrypoint-initdb.d
      - name: guacamole-permissions
        image: busybox
        command:
          - sh
          - '-c'
          - 'mkdir -p /data/pgdata && chown -R 1000:1000 /data/pgdata'
        volumeMounts:
          - name: guac-db
            mountPath: /data
      containers:
      - name: guacd
        image: guacamole/guacd
        imagePullPolicy: Always
        ports:
        - containerPort: 4822
          name: guacd-port
      - name: guacamole
        image: guacamole/guacamole:latest
        # livenessProbe:
        #   httpGet:
        #     path: /guacamole
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 35
        #   periodSeconds: 60
        #   successThreshold: 1
        #   timeoutSeconds: 3
        # readinessProbe:
        #   httpGet:
        #     path: /guacamole
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 60
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
        env:
        - name: GUACD_HOSTNAME
          value: guacd.guacamole.svc.cluster.local
        - name: GUACD_PORT
          value: "4822"
        - name: POSTGRES_HOSTNAME
          value: guacamole-db.guacamole.svc.cluster.local
        - name: POSTGRES_DATABASE
          value: postgres
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: guacamole-dbpassword
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: guacamole-dbpassword
              key: password
        ports:
        - containerPort: 8080
          name:  guacamole-http        
      - name:  guacdb
        image:  postgres:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1000
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          exec:
            command: ["psql", "-U", "postgres", "-d", "postgres", "-c", "SELECT 1"]
          initialDelaySeconds: 45
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["psql", "-U", "postgres", "-d", "postgres", "-c", "SELECT 1"]
          initialDelaySeconds: 15
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: guacamole-dbpassword
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: guacamole-dbpassword
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort:  5432
          name: guacamole-db
        volumeMounts:
        - name: guac-initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: guac-db
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: guac-initdb
        persistentVolumeClaim:
          claimName: guacamole-initdb
      - name: guac-db
        persistentVolumeClaim:
          claimName: guacamole-db
      restartPolicy: Always
---
